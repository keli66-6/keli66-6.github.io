{"pages":[],"posts":[{"title":"FastDFS","text":"&lt;!—morce–&gt; FastDFS参考视频：https://www.bilibili.com/video/BV1ta4y1v7Kw?from=search&amp;seid=7274534228530086861 参考文档：https://blog.csdn.net/qq_34301871/article/details/80060235 一、FastDFS入门1、分布式文件系统常见的分布式文件：FastDFS、GFS、HDFS、Lustre、GrldFS、nogileFS、TFS 传统方式存储的缺点：宕机、磁盘损坏、磁盘空间小 分布式文件存储的优点：解决单点故障、数据备份 开源地址：https://github.com/happyfish100 2、架构​ 用户 Client ​ 分布式文件系统 Tracker Server 跟踪器 文件系统 文件系统 文件系统 Storage Server 存储节点 文件系统 文件系统 文件系统 （数据备份） 3、FastDFS 环境搭建1、安装前的准备i、检查Linux上是否安装了 gcc、libevent、libevent-develyum list installed | grep gcc yum list installed | grep libevent yum list installed | grep libevent-devel ii、如果没有，就安装yum install gcc libevent libevent-devel -y 2、相关源码fastdfs: 分布式文件系统（DFS） git clone https://github.com/happyfish100/fastdfs.git fastdfs-client-java: FastDFS Java客户端SDK https://github.com/happyfish100/fastdfs-client-java.git libfastcommon: FastDFS中提取的c公共函数库 git clone https://github.com/happyfish100/libfastcommon.git libshmcache: libshmcache是共享内存中用于多个进程的本地缓存 git clone https://github.com/happyfish100/libshmcache.git fastdfs-nginx-module: FastDFS Nginx模块 git clone https://github.com/happyfish100/fastdfs-nginx-module.git fastdht: FastDHT是基于键值对的高性能分布式哈希表（DHT） git clone https://github.com/happyfish100/fastdht.git 3、安装libfastcommon 库git clone https://github.com/happyfish100/libfastcommon.git cd libfastcommon ./make.sh &amp;&amp; ./make.sh install 4、安装fastdfs 分布式git clone https://github.com/happyfish100/fastdfs.git cd fastdfs ./make.sh &amp;&amp; ./make.sh install 5、存放位置命令：/usr/bin 配置文件：/etc/fdfs cd /root/fastdfs/conf cp http.conf /etc/fdfs/ cp mime.types /etc/fdfs/ 4、FastDFS的配置与启动cp storage.conf.sample storage.conf cp tracker.conf.sample tracker.conf mkdir -p /opt/fastdfs/{tracker,storage} vim tracker.conf base_path = /opt/fastdfs/tracker #日志文件存放路径 vim storage.conf base_path = /opt/fastdfs/storage store_path0 = /opt/fastdfs/storage/files #磁盘存放路径 tracker_server = IP:22122 # tracker服务器的ip 启动命令：fdfs_tracker [start | stop | restart] 启动命令：fdfs_storage [start | stop | restart] 查看进程：ps -ef |grep fdfs （config_file = /etc/fdfs/*.conf) 5、FastDFS测试cp client.conf.sample client.conf vim client.conf base_path = /opt/fastdfs/client tracker_server = IP:22122 # tracker服务器的ip 测试上传：fdfs_test /etc/fdfs/client.conf upload test.txt 返回数据：保存 group_name=组名，IP，端口 group_name=组名，运程存储位置 example file url: 访问路径文件 #默认不能访问 测试下载：fdfs_test /etc/fdfs/client.conf download 组名 存储路径 下载到当前路径 测试删除：fdfs_test /etc/fdfs/client.conf delete 组名 存储路径 6、HTTP访问1、下载模块git clone https://github.com/happyfish100/fastdfs-nginx-module.git 路径：/root/soft/fastdfs-nginx-module/src 2、下载nginxnginx下载：https://nginx.org/en/download.html 进入nginx目录 ./configure –prefix=/usr/local/nginx_fdfs –add-module=/root/soft/fastdfs-nginx-module-master/src 注意：HTTP报错 网址：https://blog.csdn.net/hybaym/article/details/50929958 yum -y install pcre-devel yum -y install openssl openssl-devel 3、编译安装make &amp;&amp; make install 4、配置vim mod_fastdfs.conf base_path=/opt/fastdfs/nginx_mod #基础路径 tracker_server=IP:22122 #跟踪服务ip url_have_group_name = true #组名 store_path0=/opt/fastdfs/storage/files #文件存放路径 cp mod_fastdfs.conf /etc/fdfs/ mkdir -p /opt/fastdfs/nginx_mod cd /usr/local/nginx_fdfs/conf vim nginx.conf location ~ /group[1-9]/M0[0-9] { ​ ngx_fastdfs_module; } 测试配置：/usr/local/nginx_fdfs/sbin/nginx -c /usr/local/nginx_fdfs/conf/nginx.conf -t 启动：/usr/local/nginx_fdfs/sbin/nginx -c /usr/local/nginx_fdfs/conf/nginx.conf 软连接：ln -i /usr/local/nginx_fdfs/sbin/nginx /usr/local/sbin 检测：ps -ef | grep nginx 7、流程图![image-20200717172533963](C:\\Users\\Administrator\\Pictures\\Camera Roll\\7.png) 8、FastDFS 在java 项目中开发使用","link":"/2020/08/06/FastDFS/"},{"title":"github Hexo搭建个人博客","text":"&lt;!—morce–&gt; github Hexo搭建个人博客准备环境node Hexo git 安装node官网地址：https://nodejs.org wget https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz mkdir -p /usr/local tar -xvf node-v12.14.0-linux-x64.tar.xz -C /usr/local mv node-v12.14.0-linux-x64 node 环境变量的配置 vim /root/.bash_profile PATH=$PATH:$HOME/bin:/usr/local/node/bin source /root/.bash_profile 检测环境是否安装 node -v npm -v git version 安装Hexo官网文档：https://hexo.io/zh-cn/ npm install -g hexo-cli hexo init myBlog npm install 目录文件详细解释 _config.yml #网站的配置信息 package.json scaffolds #模板文件夹 source #资源文件夹 ​ _drafts #草稿文件 ​ _posts #文章markdown文件 themes #主题文件夹 启动Hexohexo g #生成 hexo s #部署到本地 hexo g -d #部署到远程github 访问地址：http://IP:4000 更换主题https://github.com/removeif/hexo-theme-amazing 本文章参考：https://segmentfault.com/a/1190000017986794 http://xiaoli.love/","link":"/2020/08/06/github%20Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"},{"title":"hello-world","text":"&lt;!—morce–&gt;title: Hello WorldWelcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/08/06/hello-world/"},{"title":"谷歌云的使用","text":"&lt;!—morce–&gt;谷歌云的使用 GCP 启用root登录sudo -i 设置root密码（输入时不显示）passwd root 然后编辑ssh配置文件（进入后点击i键）vi /etc/ssh/sshd_config 找到下面的内容，并修改PermitRootLogin noPasswordAuthentication no(no改为yes，修改完成点击ESC键，输入:wq回车) 最后，重启sshservice sshd restart sed -i ‘s/PermitRootLogin no/PermitRootLogin yes/g’ /etc/ssh/sshd_config sed -i ‘s/PasswordAuthentication no/PasswordAuthentication yes/g’ /etc/ssh/sshd_config docker的安装与持久插件 yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-engine","link":"/2020/08/06/%E8%B0%B7%E6%AD%8C%E4%BA%91%E7%9A%84%E4%BD%BF%E7%94%A8/"}],"tags":[],"categories":[]}